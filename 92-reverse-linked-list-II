# Medium
# O(N) O(1)


# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int 
        :rtype: ListNode
        """
        i = 0
        if(m==n):
            return head
        dummy = ListNode(0)
        dummy.next = head
        ret = dummy
        while dummy:
            if i+1==m:
                dummy.next = self.reverseBegin(dummy.next, n-i)
                return ret.next
            i += 1
            dummy = dummy.next
            
    def reverseBegin(self, node, k):
        i = 0
        rev = None
        ret = node
        while i<k:
            i += 1
            temp = node.next
            node.next= rev
            rev = node
            node = temp
        ret.next = temp
        return rev
            
